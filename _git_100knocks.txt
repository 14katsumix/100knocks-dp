#===============================================================================
100knocks-dp 公開向けの管理
#===============================================================================

* ローカルリポジトリ: 
/Users/kk/Home/_work/Analysis/100knocks-dp-dev

* リモートリポジトリ: 
100knocks-dp-dev: 開発用 (Private)
100knocks-dp: 公開用 (Public)

事前に上記リモートリポジトリ Web側で作成しておく.

100knocks-dp (pub) にはローカルリポジトリの公開ファイルのみを push する。

* .gitignore ファイルの切り替え: 
.gitignore-dev
.gitignore-pub

(*) 通常、dev については VSCode GUI を利用する。

* pushスクリプト:
./push.sh dev
./push.sh pub

* テスト環境: 

cd /Users/kk/ds/
git clone git@github.com-14katsumix:14katsumix/100knocks-dp.git
git config --local user.name "14katsumix"
git config --local user.email "14katsumix@gmail.com"
git config --local url."github.com-14katsumix:".insteadOf "git@github.com:"
cd 100knocks-dp
git pull origin main

* answer.R の開発環境 (-> 無し)

ssh -T git@github.com-14katsumix
cd /Users/kk/ds/100knocks-dp
git clone git@github.com-14katsumix:14katsumix/100knocks-dp-dev.git .

git config --local user.name "14katsumix"
git config --local user.email "14katsumix@gmail.com"
git config --local url."github.com-14katsumix:".insteadOf "git@github.com:"

#-------------------------------------------------------------------------------
* リモートリポジトリの全ファイルを確認

\cp -pf .gitignore-pub .gitignore
git remote set-url origin git@github.com:14katsumix/100knocks-dp.git
git ls-tree -r HEAD
git ls-tree -r origin/main
git clean -n # 不要なファイルの確認

\cp -pf .gitignore-dev .gitignore
git remote set-url origin git@github.com:14katsumix/100knocks-dp-dev.git
git ls-tree -r HEAD
git ls-tree -r origin/main

#-------------------------------------------------------------------------------
* .gitignore が効かない場合
  Gitの追跡対象から全てのファイルとディレクトリを一時的に解除する.

- dev

git remote set-url origin git@github.com:14katsumix/100knocks-dp-dev.git
git remote -v
\cp -pf .gitignore-dev .gitignore
git rm -r --cached .
git status
./push.sh dev

- pub

./rm-cached.sh
---
git remote set-url origin git@github.com:14katsumix/100knocks-dp.git
git remote -v
\cp -pf .gitignore-pub .gitignore
git rm -r --cached .
git status

git add -A
git commit -m "commit"
git push -u origin main

git remote set-url origin git@github.com:14katsumix/100knocks-dp-dev.git
\cp -pf .gitignore-dev .gitignore
# ./push.sh pub

#-------------------------------------------------------------------------------
* 100knocks-dp-dev: 開発用 (Private) の管理

1. .gitignore.dev を事前に準備し、

cd /Users/kk/Home/_work/Analysis/100knocks-dp-dev

\cp -pf .gitignore-dev .gitignore

2. 初回の push: 

git init

git config --local user.name "14katsumix"
git config --local user.email "14katsumix@gmail.com"
git config --local url."github.com-14katsumix:".insteadOf "git@github.com:"

git add -A
git status

git commit -m "Initial commit"

git remote add origin git@github.com:14katsumix/100knocks-dp-dev.git
git remote -v

git branch -M main
git push -u origin main

Web側で確認する.

3. 2回目以降の push

push.sh dev

#-------------------------------------------------------------------------------
* 100knocks-dp: 公開用 (Public) の管理

1. .gitignore.pub を作成する.

2. 初回の push: 

cd /Users/kk/Home/_work/Analysis/100knocks-dp-dev

\cp -pf ./.gitignore-pub ./.gitignore

git remote add origin git@github.com:14katsumix/100knocks-dp-pub.git
git remote set-url origin git@github.com:14katsumix/100knocks-dp.git
git remote -v

git branch -M main
git push -u origin main

\cp -pf .gitignore-pub .gitignore

- 必要に応じて説明文や README を追加すると、ブログ読者にとって親切。

3. 2回目以降の push

push.sh pub

#-------------------------------------------------------------------------------
* サブディレクトリのみ (ddddd) を ローカルに clone する方法

# --no-checkout: すべてのデータを取得しないようにする
git clone --no-checkout git@github.com-14katsumix:14katsumix/R-All.git
cd local_dir

# Sparse Checkout を有効化
git sparse-checkout init --cone

# tmp ディレクトリのみを取得するように設定
git sparse-checkout set ddddd

# 指定したディレクトリのみチェックアウト
git checkout main

git remote -v
...

#-------------------------------------------------------------------------------
